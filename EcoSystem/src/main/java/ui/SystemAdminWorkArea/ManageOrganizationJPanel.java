/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.*;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateComboBox();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                    Object[] row = new Object[3];
                    row[0] = organization.getName();
                    row[1] = enterprise.getName();
                    row[2] = organization.getOrganizationType().getValue();

                    model.addRow(row);                    
                }
            }
        }
    }

    private void populateComboBox() {
        enterpriseJComboBox.removeAllItems();
        organizationTypeJComboBox.removeAllItems();


        for (Network network : system.getNetworkList()) {
            for(Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()){
                enterpriseJComboBox.addItem(enterprise);    
            }
        }

        // 添加 EnterpriseType 到企业类型下拉框
        for (Organization.Type type : Organization.Type.values()) {
            organizationTypeJComboBox.addItem(type);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        organizationTypeJComboBox = new javax.swing.JComboBox();
        btnSearch = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Organization Name", "Enterprise", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        jLabel1.setText("Enterprise");

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel3.setText("Organization Type");

        organizationTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationTypeJComboBoxActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh Table");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 58, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enterpriseJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(organizationTypeJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(organizationTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnView)
                    .addComponent(btnRefresh)
                    .addComponent(btnDelete))
                .addContainerGap(69, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        if(txtName.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "Name cannot be blank.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String name = txtName.getText().trim().toLowerCase(); 
        String enterpriseName = ((Enterprise)(enterpriseJComboBox.getSelectedItem())).getName();
        
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        //System.out.println("TESTING INFO: \nENTERPRISENAME: " + enterpriseName + "\nORGANIZATIONNAME: " + organizationName);
        model.setRowCount(0); 
        for(Network network : system.getNetworkList()){
            for (Enterprise te : network.getEnterpriseDirectory().getEnterpriseList()) {
                if(te.getName().toLowerCase().contains(enterpriseName.toLowerCase().trim())){
                    //System.out.println("ENTERPRISE FOUND" + te.getName().toLowerCase().trim());
                    for(Organization organization : te.getOrganizationDirectory().getOrganizationList()){
                        if(organization.getName().toLowerCase().contains(name.toLowerCase().trim())){
                            Object[] row = new Object[6];
                            row[0] = organization.getName();
                            row[1] = te.getName();
                            row[2] = organization.getOrganizationType().getValue();
                            model.addRow(row);                                                  
                        }
                    }                    
                }
            }            
        }

        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No user found", "Information", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
         Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    public void populateEnterpriseJComboBox(EcoSystem system) {
        enterpriseJComboBox.removeAllItems();
        for (Network network : system.getNetworkList()) {
            for(Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()){
                enterpriseJComboBox.addItem(e);               
            }
        }
    }
    
    public void populateOrganizationTypeJComboBox(Enterprise enterprise) {
        organizationTypeJComboBox.removeAllItems();
        if(enterprise.getEnterpriseType().getValue().contains("Hospital")){
            organizationTypeJComboBox.addItem(new EmergencyOrganization("EmergencyOrganization"));
            organizationTypeJComboBox.addItem(new MedicalOrganization("MedicalOrganization"));
            organizationTypeJComboBox.addItem(new PharmacyOrganization("PharmacyOrganization"));
            organizationTypeJComboBox.addItem(new SurgicalOrganization("SurgicalOrganization"));
        }else if(enterprise.getEnterpriseType().getValue().contains("Insurance")){
            organizationTypeJComboBox.addItem(new CaseManagerOrganization("CaseManagerOrganization"));
        }else if(enterprise.getEnterpriseType().getValue().contains("Medical")){
            organizationTypeJComboBox.addItem(new SalesOrganization("SalesOrganization"));           
            organizationTypeJComboBox.addItem(new LabOrganization("LabOrganization"));           
        }else if(enterprise.getEnterpriseType().getValue().contains("Pharmacy")){
            organizationTypeJComboBox.addItem(new MedicineOrganization("MedicineOrganization"));           
            organizationTypeJComboBox.addItem(new SupplementOrganization("SupplementOrganization"));           
        }     
    }
    
    
    
    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
        Enterprise e = (Enterprise)enterpriseJComboBox.getSelectedItem();
        if (e != null){
            populateOrganizationTypeJComboBox(e);
        }
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void organizationTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationTypeJComboBoxActionPerformed

    }//GEN-LAST:event_organizationTypeJComboBoxActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = organizationJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to view details.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String organizationName = (String) organizationJTable.getValueAt(selectedRow, 0);
        String enterpriseName = (String) organizationJTable.getValueAt(selectedRow, 1);
        Organization selectedOrganization = null;
        
        for(Network n : system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                    if(o.getName().replace(" ", "").toLowerCase().contains(organizationName.replace(" ", "").toLowerCase())){
                        selectedOrganization = o;
                    }
                }
            }
        }
        OrganizationDetailsJPanel organizationDetailsJPanel = new OrganizationDetailsJPanel(userProcessContainer, selectedOrganization, enterpriseName);
        userProcessContainer.add("OrganizationDetailsJPanel", organizationDetailsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = organizationJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to view details.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String enterpriseName = (String)organizationJTable.getValueAt(selectedRow, 1);
        String organizationName = (String)organizationJTable.getValueAt(selectedRow, 0);
        String organizationType = (String)organizationJTable.getValueAt(selectedRow, 2);
        System.out.println("DELETE INFO:" + enterpriseName + ", " + organizationName + ", " + organizationType );
        for(Network n:system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                    if(o.getName().replace(" ", "").toLowerCase().contains(organizationName.toLowerCase())){
                        e.getOrganizationDirectory().getOrganizationList().remove(o);
                        return;
                    }
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JComboBox organizationTypeJComboBox;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
