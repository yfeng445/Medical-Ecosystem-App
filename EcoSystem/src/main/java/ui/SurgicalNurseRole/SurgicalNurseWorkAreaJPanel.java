/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SurgicalNurseRole;

import Business.EcoSystem;
import Business.Organization.Organization;
import Business.Organization.SurgicalOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author raunak
 */
public class SurgicalNurseWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private SurgicalOrganization surgicalOrganization;
    
    private final Map<Integer, WorkRequest> requestMap = new HashMap<>();
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public SurgicalNurseWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.surgicalOrganization = (SurgicalOrganization)organization;
        
        processJButton.setEnabled(false);
        
        workRequestJTable.getSelectionModel().addListSelectionListener(e -> {
            updateButtonStates();
        });
        
        populateTable();
    }
    
    public void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
        requestMap.clear();
    
        String myRole = "Surgical Nurse"; 

        int rowIndex = 0;
        for (WorkRequest request : surgicalOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof LabTestWorkRequest) {
                LabTestWorkRequest labRequest = (LabTestWorkRequest) request;
      
                if (labRequest.getTargetRole().equals(myRole)) {
                    Object[] row = new Object[4];
                    row[0] = labRequest.getMessage();
                    row[1] = labRequest.getSender().getEmployee().getName();
                    row[2] = labRequest.getReceiver() == null ? "Unassigned" : 
                            labRequest.getReceiver().getEmployee().getName();
                    row[3] = labRequest.getStatus();
                    model.addRow(row);
                    requestMap.put(rowIndex, request);
                    rowIndex++;
                }
            }
        }           
        
        updateButtonStates();
    }

    private void updateButtonStates() {
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            processJButton.setEnabled(false);
            assignJButton.setEnabled(false);
            return;
        }
        
        WorkRequest request = requestMap.get(selectedRow);
        UserAccount receiver = request.getReceiver();
        
       
        processJButton.setEnabled(receiver != null && 
                                receiver.equals(userAccount));
        
       
        assignJButton.setEnabled(receiver == null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 58, 375, 96));

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 215, -1, -1));

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 26, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        WorkRequest request = requestMap.get(selectedRow);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateTable();
        
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
       
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) return;
        
        LabTestWorkRequest request = (LabTestWorkRequest)requestMap.get(selectedRow);
        if (request.getReceiver() == null || !request.getReceiver().equals(userAccount)) {
            return;
        }
        
        request.setStatus("Processing");
        
        SurgicalNurseProcessJPanel processWorkRequestJPanel = new SurgicalNurseProcessJPanel(userProcessContainer, request);
        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
        updateButtonStates();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
